<?php

/**
 * @file
 * Contains ucb_trust_schema.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_help().
 */
function ucb_trust_schema_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ucb_trust_schema':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Trust Schema Module enables individual Drupal sites to declare and expose trust metadata on selected content nodes.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_permission().
 */
function ucb_trust_schema_permission() {
  return [
    'manage trust metadata' => [
      'title' => t('Manage trust metadata'),
      'description' => t('Assign or modify trust metadata fields on content.'),
      'restrict_access' => TRUE,
    ],
    'view trust metadata' => [
      'title' => t('View trust metadata'),
      'description' => t('View trust metadata fields on content.'),
    ],
  ];
}

/**
 * Implements hook_entity_insert().
 */
function ucb_trust_schema_entity_insert(EntityInterface $entity) {
  if ($entity instanceof NodeInterface) {
    // Set default values for new nodes
    $entity->set('field_trust_role', '');
    $entity->set('field_trust_scope', '');
    $entity->set('field_trust_contact', '');
    $entity->set('field_trust_syndication_enabled', FALSE);
    $entity->save();
  }
}

/**
 * Gets trust metadata for a node.
 *
 * @param int $nid
 *   The node ID.
 *
 * @return array
 *   The trust metadata array.
 */
function ucb_trust_schema_get_trust_metadata($nid) {
  $node = \Drupal::entityTypeManager()->getStorage('node')->load($nid);
  if (!$node) {
    return [
      'trust_role' => NULL,
      'trust_scope' => NULL,
      'trust_contact' => NULL,
      'trust_topics' => [],
      'trust_syndication_enabled' => FALSE,
    ];
  }

  $trust_topics = [];
  foreach ($node->get('field_trust_topics') as $topic) {
    $trust_topics[] = $topic->entity->getName();
  }

  return [
    'trust_role' => $node->get('field_trust_role')->value,
    'trust_scope' => $node->get('field_trust_scope')->value,
    'trust_contact' => $node->get('field_trust_contact')->value,
    'trust_topics' => $trust_topics,
    'trust_syndication_enabled' => $node->get('field_trust_syndication_enabled')->value,
  ];
}

/**
 * Update trust metadata for a node.
 *
 * @param int $nid
 *   The node ID.
 * @param array $metadata
 *   The trust metadata array.
 *
 * @return bool
 *   TRUE if the update was successful, FALSE otherwise.
 */
function ucb_trust_schema_update_trust_metadata($nid, array $metadata) {
  $node = \Drupal::entityTypeManager()->getStorage('node')->load($nid);
  if (!$node) {
    return FALSE;
  }

  if (isset($metadata['trust_role'])) {
    $node->set('field_trust_role', $metadata['trust_role']);
  }
  if (isset($metadata['trust_scope'])) {
    $node->set('field_trust_scope', $metadata['trust_scope']);
  }
  if (isset($metadata['trust_contact'])) {
    $node->set('field_trust_contact', $metadata['trust_contact']);
  }
  if (isset($metadata['trust_topics'])) {
    $node->set('field_trust_topics', $metadata['trust_topics']);
  }
  if (isset($metadata['trust_syndication_enabled'])) {
    $node->set('field_trust_syndication_enabled', $metadata['trust_syndication_enabled']);
  }

  try {
    $node->save();
    return TRUE;
  }
  catch (\Exception $e) {
    \Drupal::logger('ucb_trust_schema')->error('Failed to update trust metadata: @error', ['@error' => $e->getMessage()]);
    return FALSE;
  }
}

/**
 * Toggle syndication status for a node.
 *
 * @param int $nid
 *   The node ID.
 * @param bool $enabled
 *   Whether syndication should be enabled.
 *
 * @return bool
 *   TRUE if the update was successful, FALSE otherwise.
 */
function ucb_trust_schema_toggle_syndication($nid, $enabled) {
  return ucb_trust_schema_update_trust_metadata($nid, ['trust_syndication_enabled' => $enabled]);
}

/**
 * Implements hook_jsonapi_ENTITY_TYPE_query_alter().
 */
function ucb_trust_schema_jsonapi_node_query_alter(\Drupal\Core\Database\Query\Select $query, $resource_type) {
  \Drupal::service('ucb_trust_schema.jsonapi')->alterNodeQuery($query, $resource_type);
}

/**
 * Implements hook_jsonapi_ENTITY_TYPE_FIELD_NAME_alter().
 */
function ucb_trust_schema_jsonapi_node_field_alter(&$field_value, $field, $entity, $resource_type) {
  \Drupal::service('ucb_trust_schema.jsonapi')->alterFieldValue($field_value, $field->getPublicName(), $entity);
} 