<?php

/**
 * @file
 * Install, update and uninstall functions for the UCB Trust Schema module.
 */

use Drupal\Core\Database\Database;
use Drupal\ucb_trust_schema\Entity\TrustMetadata;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_schema().
 */
function ucb_trust_schema_schema() {
  $schema['trust_metadata'] = [
    'description' => 'Stores trust metadata for content nodes.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique trust metadata ID.',
      ],
      'uuid' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'Unique trust metadata UUID.',
      ],
      'node_id' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The node ID this trust metadata belongs to.',
      ],
      'trust_role' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The trust role of the content.',
      ],
      'trust_scope' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The scope of the content.',
      ],
      'type' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The type/subject of the content.',
      ],
      'trust_contact' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'Contact information for the content maintainer.',
      ],
      'timeliness' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The timeliness of the content (evergreen, semester-specific, etc.).',
      ],
      'audience' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'description' => 'The target audience for the content.',
      ],
      'trust_syndication_enabled' => [
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Whether trust syndication is enabled.',
      ],
      'syndication_consumer_sites' => [
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Number of sites consuming this content.',
      ],
      'syndication_total_views' => [
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Total number of views across all consumer sites.',
      ],
      'syndication_consumer_sites_list' => [
        'type' => 'text',
        'size' => 'big',
        'not null' => FALSE,
        'description' => 'List of sites consuming this content.',
      ],
    ],
    'primary key' => ['id'],
    'unique keys' => [
      'uuid' => ['uuid'],
    ],
    'indexes' => [
      'node_id' => ['node_id'],
      'trust_role' => ['trust_role'],
      'trust_scope' => ['trust_scope'],
      'type' => ['type'],
      'timeliness' => ['timeliness'],
      'audience' => ['audience'],
      'trust_syndication_enabled' => ['trust_syndication_enabled'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function ucb_trust_schema_install() {
  // Create default trust topics
  $topics = [
    'Academic support' => '',
    'Accessibility' => 'Compliance, Digital, Accommodations',
    'Admissions' => '',
    'Advising' => '',
    'Alumni' => '',
    'Arts & culture' => 'Museums',
    'Campus resources' => '',
    'Career' => '',
    'Deadlines' => 'Tuition, Application, Withdraw, Add/Drop, etc.',
    'Degree requirements' => '',
    'Dining' => '',
    'Employment' => '',
    'Enrollment' => '',
    'Events' => 'Homecoming, Conference of World Affairs',
    'Facilities' => '',
    'Financial aid' => 'Grants, Scholarships',
    'Graduation' => '',
    'Health' => '',
    'Housing' => '',
    'Policy' => '',
    'Records' => '',
    'Recruitment' => '',
    'Registration' => '',
    'Research' => '',
    'Safety' => '',
    'Sports' => '',
    'Student organizations' => '',
    'Support services' => '',
    'Sustainability' => '',
    'Parking & transportation' => '',
    'Technology' => '',
  ];

  foreach ($topics as $name => $description) {
    $term = Term::create([
      'vid' => 'trust_topics',
      'name' => $name,
      'description' => $description,
      'weight' => 0,
    ]);
    $term->save();
  }
}

/**
 * Add content_authority column to trust_metadata table.
 */
function ucb_trust_schema_update_8003() {
  $schema = Database::getConnection()->schema();
  
  if (!$schema->fieldExists('trust_metadata', 'content_authority')) {
    $field_spec = [
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
      'description' => 'The content authority from site affiliation.',
    ];
    
    $schema->addField('trust_metadata', 'content_authority', $field_spec);
    
    // Add index with proper specification
    $index_spec = [
      'fields' => ['content_authority' => $field_spec],
    ];
    $schema->addIndex('trust_metadata', 'content_authority', ['content_authority'], $index_spec);
  }
}

/**
 * Remove content_authority column and make it a computed field.
 */
function ucb_trust_schema_update_8004() {
  $schema = Database::getConnection()->schema();

  if ($schema->fieldExists('trust_metadata', 'content_authority')) {
    // Drop the index first
    if ($schema->indexExists('trust_metadata', 'content_authority')) {
      $schema->dropIndex('trust_metadata', 'content_authority');
    }

    // Drop the column
    $schema->dropField('trust_metadata', 'content_authority');
  }
}

/**
 * Remove site_affiliation column since we now use site_name directly.
 */
function ucb_trust_schema_update_8005() {
  $schema = Database::getConnection()->schema();

  if ($schema->fieldExists('trust_metadata', 'site_affiliation')) {
    // Drop the index first
    if ($schema->indexExists('trust_metadata', 'site_affiliation')) {
      $schema->dropIndex('trust_metadata', 'site_affiliation');
    }

    // Drop the column
    $schema->dropField('trust_metadata', 'site_affiliation');
  }
}

/**
 * Add type column to trust_metadata table.
 */
function ucb_trust_schema_update_8006() {
  $schema = Database::getConnection()->schema();
  
  if (!$schema->fieldExists('trust_metadata', 'type')) {
    $field_spec = [
      'type' => 'varchar',
      'length' => 255,
      'not null' => FALSE,
      'description' => 'The type/subject of the content.',
    ];
    
    $schema->addField('trust_metadata', 'type', $field_spec);
    
    // Add index for the type field
    $index_spec = [
      'fields' => ['type' => $field_spec],
    ];
    $schema->addIndex('trust_metadata', 'type', ['type'], $index_spec);
  }
}
